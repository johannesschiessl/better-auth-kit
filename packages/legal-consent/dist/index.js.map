{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": [
    "import type { BetterAuthPlugin } from \"better-auth\";\nimport { APIError, createAuthMiddleware } from \"better-auth/api\";\nimport type { FieldAttribute, FieldType } from \"better-auth/db\";\n\nexport interface LegalConsentOptions {\n  /**\n   * Wether the user must accept the terms of service.\n   */\n  requireTOS?: boolean;\n  /**\n   * Wether the user must accept the privacy policy.\n   */\n  requirePrivacyPolicy?: boolean;\n  /**\n   * Wether the user must be above a certain age.\n   */\n  requireAgeVerification?: boolean;\n  /**\n   * Wether the user must accept the marketing consent.\n   */\n  requireMarketingConsent?: boolean;\n  /**\n   * Wether the user must accept the cookie consent.\n   */\n  requireCookieConsent?: boolean;\n  /**\n   * Adjust the default schema configuration values.\n   */\n  schema?: {\n    /**\n     * The name of the user model.\n     *\n     * @default \"user\"\n     */\n    userModelName: string;\n    /**\n     * The name of the `tosAccepted` field.\n     *\n     * @default \"tosAccepted\"\n     */\n    tosAccepted: string;\n    /**\n     * The name of the `privacyPolicyAccepted` field.\n     */\n    privacyPolicyAccepted: string;\n    /**\n     * The name of the `ageVerified` field.\n     */\n    ageVerified: string;\n    /**\n     * The name of the `marketingConsentAccepted` field.\n     */\n    marketingConsentAccepted: string;\n    /**\n     * The name of the `cookieConsentAccepted` field.\n     */\n    cookieConsentAccepted: string;\n  };\n}\n\nexport const ERROR_CODES = {\n  TOS_NOT_ACCEPTED: \"TOS must be accepted\",\n  PRIVACY_NOT_ACCEPTED: \"Privacy must be accepted\",\n  AGE_NOT_ACCEPTED: \"Age must be accepted\",\n  MARKETING_NOT_ACCEPTED: \"Marketing must be accepted\",\n  COOKIE_NOT_ACCEPTED: \"Cookie must be accepted\",\n} as const;\n\nexport const legalConsent = (options?: LegalConsentOptions) => {\n  const opts = {\n    requireAgeVerification: options?.requireAgeVerification ?? false,\n    requireTOS: options?.requireTOS ?? false,\n    requirePrivacyPolicy: options?.requirePrivacyPolicy ?? false,\n    requireMarketingConsent: options?.requireMarketingConsent ?? false,\n    requireCookieConsent: options?.requireCookieConsent ?? false,\n    schema: {\n      userModelName: options?.schema?.userModelName ?? \"user\",\n      tosAccepted: options?.schema?.tosAccepted ?? \"tosAccepted\",\n      ageVerified: options?.schema?.ageVerified ?? \"ageVerified\",\n      marketingConsentAccepted:\n        options?.schema?.marketingConsentAccepted ?? \"marketingConsentAccepted\",\n      privacyPolicyAccepted:\n        options?.schema?.privacyPolicyAccepted ?? \"privacyPolicyAccepted\",\n      cookieConsentAccepted:\n        options?.schema?.cookieConsentAccepted ?? \"cookieConsentAccepted\",\n    },\n  } satisfies LegalConsentOptions;\n\n  const schemaFields: Record<string, FieldAttribute<FieldType>> = {};\n\n  if (opts.requireTOS) {\n    schemaFields.tosAccepted = {\n      type: \"boolean\",\n      input: true,\n      required: true,\n      fieldName: opts.schema.tosAccepted,\n    };\n  }\n  if (opts.requirePrivacyPolicy) {\n    schemaFields.privacyPolicyAccepted = {\n      type: \"boolean\",\n      input: true,\n      required: true,\n      fieldName: opts.schema.privacyPolicyAccepted,\n    };\n  }\n  if (opts.requireAgeVerification) {\n    schemaFields.ageVerified = {\n      type: \"boolean\",\n      input: true,\n      required: true,\n      fieldName: opts.schema.ageVerified,\n    };\n  }\n  if (opts.requireMarketingConsent) {\n    schemaFields.marketingConsentAccepted = {\n      type: \"boolean\",\n      input: true,\n      required: true,\n      fieldName: opts.schema.marketingConsentAccepted,\n    };\n  }\n  if (opts.requireCookieConsent) {\n    schemaFields.cookieConsentAccepted = {\n      type: \"boolean\",\n      input: true,\n      required: true,\n      fieldName: opts.schema.cookieConsentAccepted,\n    };\n  }\n\n  return {\n    id: \"legal-consent\",\n    hooks: {\n      before: [\n        {\n          matcher: (context) => context.path.startsWith(\"/sign-up/email\"),\n          handler: createAuthMiddleware(async (ctx) => {\n            const body = ctx.body;\n            if (\n              opts.requireTOS &&\n              body[opts.schema.tosAccepted] === undefined\n            ) {\n              throw new APIError(\"BAD_REQUEST\", {\n                message: ERROR_CODES.TOS_NOT_ACCEPTED,\n              });\n            }\n\n            if (\n              opts.requirePrivacyPolicy &&\n              body[opts.schema.privacyPolicyAccepted] === undefined\n            ) {\n              throw new APIError(\"BAD_REQUEST\", {\n                message: ERROR_CODES.PRIVACY_NOT_ACCEPTED,\n              });\n            }\n\n            if (\n              opts.requireAgeVerification &&\n              body[opts.schema.ageVerified] === undefined\n            ) {\n              throw new APIError(\"BAD_REQUEST\", {\n                message: ERROR_CODES.AGE_NOT_ACCEPTED,\n              });\n            }\n\n            if (\n              opts.requireMarketingConsent &&\n              body[opts.schema.marketingConsentAccepted] === undefined\n            ) {\n              throw new APIError(\"BAD_REQUEST\", {\n                message: ERROR_CODES.MARKETING_NOT_ACCEPTED,\n              });\n            }\n\n            if (\n              opts.requireCookieConsent &&\n              body[opts.schema.cookieConsentAccepted] === undefined\n            ) {\n              throw new APIError(\"BAD_REQUEST\", {\n                message: ERROR_CODES.COOKIE_NOT_ACCEPTED,\n              });\n            }\n\n            return {\n              context: ctx,\n            };\n          }),\n        },\n      ],\n    },\n    schema: {\n      user: {\n        fields: schemaFields,\n        modelName: opts.schema.userModelName,\n      },\n    },\n    $ERROR_CODES: ERROR_CODES,\n  } satisfies BetterAuthPlugin;\n};\n"
  ],
  "mappings": "AACA,mBAAS,0BAAU,wBA2DZ,IAAM,EAAc,CACzB,iBAAkB,uBAClB,qBAAsB,2BACtB,iBAAkB,uBAClB,uBAAwB,6BACxB,oBAAqB,yBACvB,EAEa,EAAe,CAAC,IAAkC,CAC7D,IAAM,EAAO,CACX,uBAAwB,GAAS,wBAA0B,GAC3D,WAAY,GAAS,YAAc,GACnC,qBAAsB,GAAS,sBAAwB,GACvD,wBAAyB,GAAS,yBAA2B,GAC7D,qBAAsB,GAAS,sBAAwB,GACvD,OAAQ,CACN,cAAe,GAAS,QAAQ,eAAiB,OACjD,YAAa,GAAS,QAAQ,aAAe,cAC7C,YAAa,GAAS,QAAQ,aAAe,cAC7C,yBACE,GAAS,QAAQ,0BAA4B,2BAC/C,sBACE,GAAS,QAAQ,uBAAyB,wBAC5C,sBACE,GAAS,QAAQ,uBAAyB,uBAC9C,CACF,EAEM,EAA0D,CAAC,EAEjE,GAAI,EAAK,WACP,EAAa,YAAc,CACzB,KAAM,UACN,MAAO,GACP,SAAU,GACV,UAAW,EAAK,OAAO,WACzB,EAEF,GAAI,EAAK,qBACP,EAAa,sBAAwB,CACnC,KAAM,UACN,MAAO,GACP,SAAU,GACV,UAAW,EAAK,OAAO,qBACzB,EAEF,GAAI,EAAK,uBACP,EAAa,YAAc,CACzB,KAAM,UACN,MAAO,GACP,SAAU,GACV,UAAW,EAAK,OAAO,WACzB,EAEF,GAAI,EAAK,wBACP,EAAa,yBAA2B,CACtC,KAAM,UACN,MAAO,GACP,SAAU,GACV,UAAW,EAAK,OAAO,wBACzB,EAEF,GAAI,EAAK,qBACP,EAAa,sBAAwB,CACnC,KAAM,UACN,MAAO,GACP,SAAU,GACV,UAAW,EAAK,OAAO,qBACzB,EAGF,MAAO,CACL,GAAI,gBACJ,MAAO,CACL,OAAQ,CACN,CACE,QAAS,CAAC,IAAY,EAAQ,KAAK,WAAW,gBAAgB,EAC9D,QAAS,EAAqB,MAAO,IAAQ,CAC3C,IAAM,EAAO,EAAI,KACjB,GACE,EAAK,YACL,EAAK,EAAK,OAAO,eAAiB,OAElC,MAAM,IAAI,EAAS,cAAe,CAChC,QAAS,EAAY,gBACvB,CAAC,EAGH,GACE,EAAK,sBACL,EAAK,EAAK,OAAO,yBAA2B,OAE5C,MAAM,IAAI,EAAS,cAAe,CAChC,QAAS,EAAY,oBACvB,CAAC,EAGH,GACE,EAAK,wBACL,EAAK,EAAK,OAAO,eAAiB,OAElC,MAAM,IAAI,EAAS,cAAe,CAChC,QAAS,EAAY,gBACvB,CAAC,EAGH,GACE,EAAK,yBACL,EAAK,EAAK,OAAO,4BAA8B,OAE/C,MAAM,IAAI,EAAS,cAAe,CAChC,QAAS,EAAY,sBACvB,CAAC,EAGH,GACE,EAAK,sBACL,EAAK,EAAK,OAAO,yBAA2B,OAE5C,MAAM,IAAI,EAAS,cAAe,CAChC,QAAS,EAAY,mBACvB,CAAC,EAGH,MAAO,CACL,QAAS,CACX,EACD,CACH,CACF,CACF,EACA,OAAQ,CACN,KAAM,CACJ,OAAQ,EACR,UAAW,EAAK,OAAO,aACzB,CACF,EACA,aAAc,CAChB",
  "debugId": "E416F9994BA3B7E364756E2164756E21",
  "names": []
}